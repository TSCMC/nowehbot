name: Build Docker Container
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  generate-requirements-txt:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v5

      - name: setup python
        uses: actions/setup-python@v6
        with:
          python-version: 3.12

      - name: install uv
        run: python3 -m pip install uv

      - name: install dependencies with uv
        run: uv sync

      - name: export requirements.txt
        run: uv export --format requirements-txt -o requirements.txt --no-hashes

      - name: upload requirements.txt
        uses: actions/upload-artifact@v5
        with:
          name: requirements
          path: requirements.txt

  build-and-publish-amd64:
    runs-on: ubuntu-latest
    needs: generate-requirements-txt
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Download requirements.txt
        uses: actions/download-artifact@v6
        with:
          name: requirements

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build amd64 image
        run: docker build -t ghcr.io/TSCMC/nowehbot:latest-amd64 --platform linux/amd64 .

      - name: push amd64 image
        run: docker push ghcr.io/TSCMC/nowehbot:latest-amd64
  
  build-and-publish-arm64:
    runs-on: ubuntu-24.04-arm
    needs: generate-requirements-txt
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Download requirements.txt
        uses: actions/download-artifact@v6
        with:
          name: requirements

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build arm64 image
        run: docker build -t ghcr.io/TSCMC/nowehbot:latest-arm64 --platform linux/arm64 .

      - name: push arm64 image
        run: docker push ghcr.io/TSCMC/nowehbot:latest-arm64
  
  generate-manifest:
    runs-on: ubuntu-latest
    needs: [build-and-publish-arm64, build-and-publish-amd64]
    steps:
      - name: setup docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull AMD64 image
        run: docker pull ghcr.io/TSCMC/nowehbot:latest-amd64

      - name: Pull ARM64 image
        run: docker pull ghcr.io/TSCMC/nowehbot:latest-arm64

      - name: Create and push manifest images
        run: |
          docker manifest create ghcr.io/TSCMC/nowehbot:latest \
            ghcr.io/TSCMC/nowehbot:latest-amd64 \
            ghcr.io/TSCMC/nowehbot:latest-arm64
          docker manifest push ghcr.io/TSCMC/nowehbot:latest
